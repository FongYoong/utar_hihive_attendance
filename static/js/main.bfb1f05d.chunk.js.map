{"version":3,"sources":["reportWebVitals.js","components/Header.js","components/Home.js","components/utils.js","App.js","images/sad.png","components/ErrorBoundary.js","index.js","App.module.css"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","root","flexGrow","title","githubButton","marginRight","spacing","HideOnScroll","props","children","window","trigger","useScrollTrigger","target","undefined","Slide","appear","direction","in","Header","styleClasses","smallScreen","useMediaQuery","useTheme","breakpoints","down","className","AppBar","style","background","Toolbar","Tooltip","arrow","placement","IconButton","rel","href","edge","color","aria-label","triggerOnce","Typography","variant","noWrap","paper","padding","textAlign","palette","text","primary","margin","container","formControl","minWidth","Home","useEffect","document","previousEmail","localStorage","getItem","useState","email","setEmail","emailError","test","String","toLowerCase","validateEmail","gettingAttendance","setGettingAttendance","noRecord","setNoRecord","rawData","setRawData","subjects","setSubjects","userDetails","setUserDetails","currentSubject","setCurrentSubject","scheduleFilter","setScheduleFilter","getAttendance","axios","get","res","data","setItem","split","slice","map","sub","detail","detail2","user","id","name","entries","index","details","newDetails","attendedTotal","total","percentage","parseFloat","newSchedule","entry","date","recordedTime","classTime","join","classType","duration","group","lecturer","attended","schedule","processData","Paper","Container","Grid","alignItems","justify","item","cascade","TextField","autoComplete","autoFocus","onChange","event","value","label","defaultValue","error","helperText","InputProps","startAdornment","InputAdornment","position","onKeyPress","e","key","delay","Button","disabled","endIcon","onClick","CircularProgress","Divider","length","Card","card","CardContent","cardContent","FormControl","InputLabel","Select","parseInt","i","MenuItem","toFixed","ToggleButtonGroup","size","newValue","ToggleButton","includes","Timeline","align","filter","reverse","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","backgroundColor","TimelineContent","elevation","App","styles","CssBaseline","Transition","React","forwardRef","ref","ErrorBoundary","state","hasError","errorInfo","location","reload","this","Dialog","open","disableBackdropClick","disableEscapeKeyDown","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","Box","width","display","flexDirection","justifyContent","mb","height","src","sadImage","alt","refreshPage","Component","console","log","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bfb1f05d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nimport { Fade } from \"react-awesome-reveal\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    githubButton: {\r\n        marginRight: theme.spacing(0),\r\n    },\r\n}));\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nfunction Header({title}) {\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    return (\r\n        <div className={styleClasses.root}>\r\n            <HideOnScroll>\r\n                <AppBar style={{ background: '#e8ab05' }}>\r\n                    <Toolbar>\r\n                        <Tooltip arrow title=\"GitHub\" placement=\"bottom\">\r\n                            <IconButton rel=\"noopener noreferrer\" href=\"https://github.com/FongYoong/utar_hihive_attendance\" target=\"_blank\" edge=\"start\" className={styleClasses.githubButton} color=\"inherit\" aria-label=\"GitHub\">\r\n                                <GitHubIcon />\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                        <Fade triggerOnce>\r\n                            <Typography variant=\"h5\" className={styleClasses.title} noWrap={!smallScreen}>\r\n                                {title}\r\n                            </Typography>\r\n                        </Fade>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </HideOnScroll>\r\n            <Toolbar />\r\n        </div>\r\n    );\r\n}\r\nexport default Header;\r\n","import {validateEmail} from \"./utils\";\r\nimport Header from \"./Header\";\r\nimport axios from 'axios';\r\nimport {React, useState, useEffect} from \"react\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport Button from '@material-ui/core/Button';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { Zoom, Slide, Fade } from \"react-awesome-reveal\";\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: theme.spacing(0),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.primary,\r\n        margin: theme.spacing(1),\r\n    },\r\n    container: {\r\n        \"& > *\": {\r\n            margin: theme.spacing(1)\r\n        }\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n}));\r\n\r\nfunction Home() {\r\n    useEffect(() => {\r\n        // Set webpage title\r\n        document.title = \"UTAR Hi-Hive Attendance\";\r\n    });\r\n\r\n    const styleClasses = useStyles();\r\n    const smallScreen = useMediaQuery(useTheme().breakpoints.down('sm'));\r\n\r\n    const previousEmail = localStorage.getItem('email');\r\n    const [email, setEmail] = useState(previousEmail ? previousEmail : \"\");\r\n    const emailError = !validateEmail(email);\r\n\r\n    const [gettingAttendance, setGettingAttendance] = useState(false);\r\n    const [noRecord, setNoRecord] = useState(false);\r\n\r\n    const [rawData, setRawData] = useState(\"\");\r\n    const [subjects, setSubjects] = useState([]);\r\n    const [userDetails, setUserDetails] = useState({});\r\n    const [currentSubject, setCurrentSubject] = useState(0);\r\n    const [scheduleFilter, setScheduleFilter] = useState(() => ['lecture', 'tutorial', 'practical']);\r\n\r\n    const processData = (data) => {\r\n        if (data === \"0:*:No record found !\") {\r\n            setNoRecord(true);\r\n        }\r\n        else {\r\n            setNoRecord(false);\r\n            localStorage.setItem('email', email);\r\n            let subjects = data.split(\":*:\").slice(1).map((sub) => \r\n                sub.split(\":**:\").map((detail) => \r\n                    detail.split(\":***:\").map((detail2) => \r\n                        detail2.split(\":-:\")\r\n                    )\r\n                )\r\n            );\r\n            let user = subjects[0][0][0];\r\n            user = {id: user[0], name: user[1]};\r\n            setUserDetails(user);\r\n            for (const [index, sub] of subjects.entries()) {\r\n                let details = sub[0][0];\r\n                const newDetails = {name: details[2], attendedTotal: details[3], total: details[4], percentage: parseFloat(details[3]) /  parseFloat(details[4]) * 100};\r\n                let schedule = sub[1];\r\n                const newSchedule = schedule.slice(0, -1).map((entry) => ({\r\n                    date: entry[2].split(\" \")[0],\r\n                    recordedTime: entry[0].split(\" \")[1],\r\n                    classTime: entry[2].split(\" \")[1].split(\":\").slice(0, -1).join(':'),\r\n                    classType: entry[3],\r\n                    duration: entry[4],\r\n                    group: entry[5],\r\n                    lecturer: entry[6],\r\n                    attended: entry[7] === \"A\" || entry[7] === \"N\" ? true : false,\r\n                }));\r\n                subjects[index] = {details: newDetails, schedule: newSchedule};\r\n            }\r\n            setSubjects(subjects);\r\n        }\r\n        setGettingAttendance(false);\r\n        setRawData(data);\r\n    }\r\n\r\n    const filterScheduleEntry = (entry) => {\r\n        if (scheduleFilter.includes('absent')) {\r\n            if (entry.attended) {\r\n                return false;\r\n            }\r\n            if (scheduleFilter.includes('lecture') && entry.classType === 'Lecture') {\r\n                return true;\r\n            }\r\n            if (scheduleFilter.includes('tutorial') && entry.classType === 'Tutorial') {\r\n                return true;\r\n            }\r\n            if (scheduleFilter.includes('practical') && entry.classType === 'Practical') {\r\n                return true;\r\n            }\r\n        }\r\n        else {\r\n            if (scheduleFilter.includes('lecture') && entry.classType === 'Lecture') {\r\n                return true;\r\n            }\r\n            if (scheduleFilter.includes('tutorial') && entry.classType === 'Tutorial') {\r\n                return true;\r\n            }\r\n            if (scheduleFilter.includes('practical') && entry.classType === 'Practical') {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const getAttendance = () => {\r\n        if (!emailError) {\r\n            setGettingAttendance(true);\r\n            axios.get(`https://www.silverlakemobility.com/plugins/WebPlugIn?type=201&email=${email}`)\r\n                .then(res => {\r\n                processData(res.data);\r\n            })\r\n        }\r\n    }\r\n\r\n  return (\r\n      <>\r\n        <Header title=\"UTAR Hi-Hive Attendance\" />\r\n        <Paper className={styleClasses.paper}>\r\n            <Container className={styleClasses.container}>\r\n                <br />\r\n                <Grid container spacing={2} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                    <Grid item>\r\n                        <Zoom duration={500} triggerOnce cascade>\r\n                            <TextField\r\n                                autoComplete={\"email\"}\r\n                                autoFocus={true}\r\n                                onChange={(event)=>{setEmail(event.target.value)}}\r\n                                label=\"Email\"\r\n                                defaultValue={email}\r\n                                error={emailError}\r\n                                helperText=\"*Data will NOT be stored or misused on other servers\"\r\n                                variant=\"outlined\"\r\n                                InputProps={{\r\n                                    startAdornment: (\r\n                                        <InputAdornment position=\"start\">\r\n                                        <MailOutlineIcon />\r\n                                        </InputAdornment>\r\n                                    ),\r\n                                }}\r\n                                onKeyPress={(e) => {\r\n                                    if (e.key === 'Enter') {\r\n                                        getAttendance();\r\n                                    }\r\n                                }}\r\n                            />\r\n                        </Zoom>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Zoom delay={200} duration={500} triggerOnce cascade>\r\n                            <Button disabled={emailError || gettingAttendance} variant=\"contained\" color=\"primary\" endIcon={<SendIcon/>} onClick={getAttendance}>\r\n                                Check Attendance\r\n                            </Button>\r\n                        </Zoom>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n                {gettingAttendance &&\r\n                    <CircularProgress />\r\n                }\r\n                <Divider />\r\n                <br />\r\n                {rawData.length > 0 && (noRecord || subjects.length === 0) &&\r\n                    <Fade triggerOnce cascade>\r\n                        <Typography variant=\"h6\">\r\n                            No record found!\r\n                        </Typography>\r\n                        <br/>\r\n                    </Fade>\r\n                }\r\n                {!noRecord && subjects.length > 0 &&\r\n                    <Fade triggerOnce cascade>\r\n                        <Grid container spacing={3} direction=\"column\" alignItems=\"center\" justify=\"center\">\r\n                            <Card className={styleClasses.card}>\r\n                                <CardContent className={styleClasses.cardContent}>\r\n                                    <Typography variant=\"body1\">\r\n                                        {userDetails.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"body1\">\r\n                                        ID: {userDetails.id}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                            <Grid item container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <FormControl variant=\"outlined\" className={styleClasses.formControl}>\r\n                                    <InputLabel>Subject</InputLabel>\r\n                                    <Select\r\n                                        value={currentSubject}\r\n                                        onChange={(event) => {setCurrentSubject(parseInt(event.target.value))}}\r\n                                        label=\"Subject\"\r\n                                        >\r\n                                        {\r\n                                            subjects.map((sub, i) => (\r\n                                                <MenuItem key={i} value={i}>{sub.details.name}</MenuItem>\r\n                                            ))\r\n                                        }\r\n                                        \r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n                            <Grid item container spacing={2} direction=\"row\" alignItems=\"center\" justify=\"center\">\r\n                                <Grid item>\r\n                                <Card className={styleClasses.card}>\r\n                                    <CardContent className={styleClasses.cardContent}>\r\n                                        <Typography variant=\"body1\">\r\n                                            Total hours attended: {subjects[currentSubject].details.attendedTotal}\r\n                                        </Typography>\r\n                                        <Typography variant=\"body1\">\r\n                                            Total hours: {subjects[currentSubject].details.total}\r\n                                        </Typography>\r\n                                        <Typography variant=\"h6\">\r\n                                            Percentage: {subjects[currentSubject].details.percentage.toFixed(2)}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </Card>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                <ToggleButtonGroup size={smallScreen? \"small\":\"medium\" } value={scheduleFilter} onChange={(event, newValue)=>setScheduleFilter(newValue)}>\r\n                                    <ToggleButton value=\"absent\">\r\n                                        {scheduleFilter.includes('absent') ? \"Absent ✓\" : \"Absent\"}\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"lecture\">\r\n                                        {scheduleFilter.includes('lecture') ? \"Lecture ✓\" : \"Lecture\"}\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"tutorial\">\r\n                                        {scheduleFilter.includes('tutorial') ? \"Tutorial ✓\" : \"Tutorial\"}\r\n                                    </ToggleButton>\r\n                                    <ToggleButton value=\"practical\">\r\n                                        {scheduleFilter.includes('practical') ? \"Practical ✓\" : \"Practical\"}\r\n                                    </ToggleButton>\r\n                                </ToggleButtonGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Timeline align=\"left\">\r\n                                {\r\n                                    subjects[currentSubject].schedule.filter(filterScheduleEntry).slice().reverse().map((entry, i) => (\r\n                                        <TimelineItem key={i}>\r\n                                            <TimelineOppositeContent>\r\n                                                <Divider />\r\n                                                <Typography variant=\"body1\">\r\n                                                    { entry.date }\r\n                                                </Typography>\r\n                                                <Typography variant=\"h6\">\r\n                                                    { entry.classType }\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\">\r\n                                                    { entry.classTime }\r\n                                                </Typography>\r\n                                                <Typography variant=\"body1\">\r\n                                                    ({entry.duration} {entry.duration > 1 ? \"hours\": \"hour\"})\r\n                                                </Typography>\r\n                                                <Typography variant=\"subtitle2\">\r\n                                                    { entry.lecturer }\r\n                                                </Typography>\r\n                                            </TimelineOppositeContent>\r\n                                            <TimelineSeparator>\r\n                                                <TimelineDot color={entry.attended ? \"primary\" : \"secondary\"} variant=\"outlined\">\r\n                                                    { entry.attended ? <CheckCircleOutlineIcon style={{ color: 'green' }} /> : <ErrorIcon style={{ color: 'red' }} /> }\r\n                                                </TimelineDot>\r\n                                                <TimelineConnector style={{ backgroundColor: entry.attended ? 'green':'red' }} />\r\n                                            </TimelineSeparator>\r\n                                            <TimelineContent>\r\n                                                <Paper elevation={3} className={styleClasses.paper}>\r\n                                                    <Typography variant=\"body2\">\r\n                                                        Scanned at: {entry.recordedTime}\r\n                                                        <br />\r\n                                                    </Typography>\r\n                                                </Paper>\r\n                                            </TimelineContent>\r\n                                        </TimelineItem>\r\n                                    ))\r\n                                }\r\n                            </Timeline>\r\n                        </Grid>\r\n                    </Fade>\r\n                }\r\n            </Container>\r\n        </Paper>\r\n      </>\r\n      \r\n  );\r\n}\r\n\r\nexport default Home;","export function validateEmail(email) {\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n}","import styles from './App.module.css';\n\nimport React from \"react\";\nimport Home from \"./components/Home\";\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\n\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n}));\n\nfunction App() {\n  const styleClasses = useStyles();\n\n  return (\n    <div className={styles.App}>\n      <CssBaseline />\n      <Container>\n        <div className={styleClasses.root}>\n          <Home />\n        </div>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/sad.3dfb4ab6.png\";","import React from \"react\";\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport sadImage from '../images/sad.png';\r\nimport { Zoom } from \"react-awesome-reveal\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error) {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // You can also log the error to an error reporting service\r\n  }\r\n  refreshPage() {\r\n      window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      // You can render any custom fallback UI\r\n      return (\r\n        <Dialog\r\n            open={true}\r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={true}\r\n            TransitionComponent={Transition}\r\n            aria-labelledby=\"alert-dialog-title\"\r\n            aria-describedby=\"alert-dialog-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-title\">Something went wrong!</DialogTitle>\r\n            <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n                Oops, seemed like you successfully crashed the website.\r\n            </DialogContentText>\r\n            <Zoom duration={500} triggerOnce cascade>\r\n                <Box width=\"100%\" display=\"flex\" flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                    <Box mb={2} display=\"flex\" justifyContent=\"center\" width=\"100%\">\r\n                        <img width=\"50%\" height=\"auto\" src={sadImage} alt=\"Feel the pain\" />\r\n                    </Box>\r\n                    <Button variant=\"contained\" color=\"primary\" endIcon={<RefreshIcon/>} onClick={this.refreshPage}>\r\n                        Refresh Page!\r\n                    </Button>\r\n                </Box>\r\n            </Zoom>\r\n            </DialogContent>\r\n        </Dialog>\r\n      );\r\n    }\r\n\r\n    return this.props.children; \r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import reportWebVitals from './reportWebVitals';\nimport React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport './index.css';\n//import Puff from './svg/puff.svg';\n\nif (process.env.NODE_ENV !== 'development') {\n  console.log = () => {}\n}\n\n/*\nconst suspenseLoader = (\n  <Fade>\n    <div className=\"suspenseLoader\">\n      <img alt=\" \" src={Puff} height=\"125\" width=\"125\"/>\n      <p>Wait ahh...</p>\n    </div>\n  </Fade>\n);\n  <Suspense fallback={suspenseLoader}>\n    <App />\n  </Suspense>\n*/\n\nReactDOM.render(\n    <ErrorBoundary>\n      <App />\n    </ErrorBoundary>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3WWb8\"};"],"sourceRoot":""}